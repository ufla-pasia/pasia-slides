---
title: Lendo Código Python
subtitle: PASIA - Aula P.2
---

##  

O conteúdo dessa aula é baseado nos capítulos 2 e 4 do livro abaixo.

![](imagens/livro_potter_zingaro.png){fig-align="center" fig-alt="Capa do livro de Potter e Zingaro." style="max-height: 50vh; width: auto;"}

# Introdução {background-color="#40666e"}

## 

# Demonstrando o uso do Copilot para Processamento de Dados {background-color="#40666e"}

## 

Vamos agora fazer algo mais interessante.

- E que já dê uma ideia de como podemos usar o Copilot em tarefas de processamento de dados.

. . .

Nós vamos utilizar um conjunto de dados (_dataset_) da plataforma Kaggle.

- Uma plataforma de competição de ciência de dados e aprendizado de máquina.
- Que tem milhares de conjuntos de dados dos mais variados assuntos.

## 

Vamos trabalhar com dados sobre futebol.

- Acesse a página do _dataset_ [All footeball player stats in top 5 leagues 23/24](https://www.kaggle.com/datasets/orkunaktas/all-football-players-stats-in-top-5-leagues-2324).
- São dados estatísticos dos jogadores das 5 principais ligas de futebol europeias.
- Veja na página quais são os dados disponíveis e uma amostra dos dados.

##

Vamos baixar os dados para usar em nosso programa. Para isso:

- Clique em `Download` &rarr; `Download dataset as zip`.
  - Logue no Kaggle ou crie uma conta se não tiver (pode ser logando com a conta do Google).
- Descompacte o arquivo zip baixado.
- Crie uma pasta para o projeto da aula de hoje e copie para ela o arquivo `top5-players.csv`.

## 

Vamos agora escrever um prompt para carregar os dados do arquivo em nosso programa.

- Abra a pasta criada no VS Code.
- Crie um novo arquivo python chamado `futebol.py`.
- Em seguida digite o prompt abaixo e gere o código com o Copilot.

. . .

::: {.halfincfontsize}
```python
# abra o arquivo csv chamado "top5-players.csv" 
# e guarde os dados em uma variável
```
:::

. . .

Execute o programa: 

- ele não deve exibir nada, mas serve para testar se o código gerado funciona.

## 

Nessa parte cada aluno pode estar vendo um código diferente:

- pois há várias bibliotecas no Python para lidar com arquivos CSV.
- E, como já sabemos, os assistentes de IA são não determinísticos.


## 

::: {.nonincremental}

É possível que o Copilot tenha sugerido uma biblioteca mas não a tenha importado.

- Para corrigir isso, ou algum outro tipo de erro, você pode selecionar o código gerado, 
  - clicar na lâmpada que aparece e acessar a opção `fix` (consertar).

- Se ele sugeriu usar uma biblioteca que precisaria ser instalada você pode alterar o prompt
  - pedindo para usar apenas as bibliotecas padrões do python.
 
:::

## 

Vamos agora trabalhar com os dados que foram carregados.

- A ideia é analisar as estatísticas dos jogadores brasileiros nas principais ligas de futebol.

. . .

Para isso vamos usar dois prompts:

- Um para calcular os dados que queremos: quantidade de gols feitos por brasileiros em cada liga.
- E outro para exibir os resultados.

## 

Gere então o código do primeiro prompt:

::: {.halfincfontsize}
```python
# a terceira coluna traz o nome do país do jogador, 
# a sexta o nome da liga e a nona o número de gols 
# feitos pelo jogador. Para cada liga some o número 
# de gols feitos por jogadores brasileiros (o país 
# é identificado como "br BRA")
```
:::

. . .

E, em seguida, do segundo.

::: {.halfincfontsize}
```python
# exiba o nome da liga e o número de gols feitos por 
# brasileiros em ordem descrescente de gols feitos
```
:::

Teste seu programa (use o Copilot para corrigir erros, se necessário).

## 

Repare que fizemos o nosso programa com apenas três prompts.

- Uma para lidar com a entrada de dados.
- Outro para processá-los.
- E o último para exibir os dados.

. . .

Esse ciclo de entrada, processamento e saída é extremamente comum em programação.

## 

Vamos agora usar o Copilot para alterar o código que havíamos gerado.

- Suponha que estamos interessados apenas nos gols dos jogadores jovens.

## 

Apague o código gerado pelo segundo prompt que você tinha feito 

- E altere o prompt informando a coluna que contém a idade e 
- pedindo os dados apenas jogadores com menos de 23 anos.

. . .

::: {.halfincfontsize}
```python
# a terceira coluna traz o nome do país do jogador, 
# a sexta o nome da liga, a sétima a idade do jogador
# e a nona o número de gols feitos pelo jogador. 
# Para cada liga some o número de gols feitos por 
# jogadores brasileiros (o país é identificado como 
# "br BRA") e que tenham menos de 23 anos.
```
:::

Teste seu programa!

## 

Você deve ter notado que os nomes das ligas começam com um identificador do país.

- `eng`, `es`, `it`, `fr` ou `de`.

. . . 

Vamos pedir ao Copilot para substituir esse identificador pelo nome do país.

## 

Apague o código gerado pelo terceiro prompt e acrescente as informações da terceira linha abaixo em diante.

::: {.halfincfontsize}
```python
# exiba o nome da liga e o número de gols feitos por 
# brasileiros em ordem descrescente de gols feitos.
# O nome da liga tem primeiro duas ou três letras para 
# identificar o país, seguido de um espaço e depois o 
# nome da liga propriamente dito. Substitua essas duas 
# letras pelo nome do país. Os países são: 
# eng: Inglaterra, es: Espanha, it: Itália, fr: França 
# e de: Alemanha
```
:::

Dica: se o copilot não gerar o código selecione o comentário, clique na lâmpada, 
 acesse `Modify` e digite `complete o código`.

## 

Repare que o que fizemos poderia ser sido feito por alguém que nunca tivesse programado em Python.

- Essa pessoa poderia ter mais dificuldade nas situações que geram erro.
- Mas ainda assim conseguiria, ao final, obter o resultado que precisa.
- Imagine como seria difícil para ela fazer isso sem uma ferramenta como o Copilot?


# Copilot via chat {background-color="#40666e"}

## 

Vamos agora interagir com o Copilot via chat para gerar um gráfico a partir dos dados processados.

. . . 

Para isso, selecione o texto e o código do terceiro prompt.

- Abra o chat do Copilot (clicando no ícone de chat na barra de título do VS Code ou digitando <kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>I</kbd>).
- Mude do modo `Agent` para `Chat` (primeira opção na parte inferior do chat).
- E digite o prompt a seguir.

##

::: {.halfincfontsize}
```python
# O código selecionado exibe informações no terminal. 
# Acrescente código para que essas informações sejam 
# exibidas em um gráfico. Caso seja necessário 
# instalar alguma biblioteca, me explique como eu 
# poderia fazer isso.
```
:::


Siga então as instruções e faça interações com o Copilot, se necessário, até obter o gráfico.

# Mais experimentos com o Copilot {background-color="#40666e"}

## 

Os exercícios a seguir podem ser feitos usando o Copilot 

- selecionando o código e acessando a opção `Modify` 
- ou via chat.

1. Aumente o tamanho das fontes do gráfico.
2. Exiba o número de gols nas barras do gráfico.
3. Salve o gráfico em um arquivo PNG.

##

É importante termos em mente que não estamos validando os resultados gerados

- Assim, é possível que alguns resultados estejam incorretos.

. . .

Como foi mencionado nas aulas anteriores, precisamos aprender a testar o código gerado pelo Copilot

- Para termos segurança de que ele faz o que precisamos.
- Veremos mais sobre isso mais adiante na disciplina.

## 

Obtendo mais informações do _dataset_:

- As informações abaixo podem ser exibidas apenas no terminal.

4. Exiba os nomes e quantidade de gols dos cinco jogadores que mais fizeram gols em cada liga, ordenados pela quantidade de gols.
5. Encontre o jogador mais jovem que marcou gol em cada liga e exiba seu nome, idade, equipe e número de gols.
6. Encontre a equipe que menos tomou cartões (amarelos e vermelhos em cada liga).
Exiba o nome da equipe e a quantidade de cartões recebidos de cada tipo.