[
  {
    "objectID": "aula_p1.html#como-estudar-esse-conteúdo",
    "href": "aula_p1.html#como-estudar-esse-conteúdo",
    "title": "Introdução à Programação suportada por IA",
    "section": "Como estudar esse conteúdo?",
    "text": "Como estudar esse conteúdo?\nUma dica fundamental é: just do it!"
  },
  {
    "objectID": "aula_p1.html#section",
    "href": "aula_p1.html#section",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "O conteúdo dessa aula é baseado nos capítulos 1 e 2 do livro abaixo."
  },
  {
    "objectID": "aula_p1.html#section-1",
    "href": "aula_p1.html#section-1",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Você conhece alguma indústria ou negócio cuja forma de trabalho não tem sofrido impacto do uso de softwares?\n\nDifícil de imaginar, não é?\nSoftware é essencial hoje em dia.\n\n\nO resultado tem sido que cada vez mais pessoas querem aprender a programar\n\nE não estamos falando apenas de graduação em área de TI.\n\nPode ser um cientista que precisa de um programa para analisar dados.\nOu um trabalhador de escritório que gostaria de automatizar alguma tarefa repetitiva chata.\nOu alguém que quer criar um jogo por hobby."
  },
  {
    "objectID": "aula_p1.html#section-2",
    "href": "aula_p1.html#section-2",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Apesar do desejo de aprender a programar\n\nDécadas de pesquisa na área de educação em computação mostram que programar é difícil.\nFerramentas de IA podem facilitar muito aprendizado\n\nEvitando que o aluno tenha que saber detalhes de regras de sintaxe.\n\n\n\nNesta disciplina usaremos o GitHub Copilot como um assistente de IA.\n\nAlgumas pessoas dizem que assistentes de IA acabarão com todos os empregros de desenvolvedores.\nOutros acham que assistentes de IA nunca serão confiáveis.\nMas é fácil encontrar falhas nesses dois argumentos opostos e extremos.\n\n\n\nO fato é que achar que assistentes de IA não deveriam ser usados hoje em dia\n\nseria o mesmo que um carpinteiro se recusar a usar ferramentas elétricas."
  },
  {
    "objectID": "aula_p1.html#section-3",
    "href": "aula_p1.html#section-3",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Os assistentes de IA possuem vantagens que são inegáveis\n\nGeram códigos que, na grande maioria das vezes, não têm erros de sintaxe.\n\nEvitando frustrações comuns de iniciantes.\n\nSão muito boas para explicar o que um código já implementado faz.\n\nFazendo com que um aluno não dependa tanto de um professor, monitor ou colega para ajudá-lo.\n\n\n\nE, claro, muitas vezes assistentes de IA geram códigos corretos para problemas comuns\n\nJá que é treinado a partir de uma quantidade imensa de códigos.\nPor que então não utilizá-los?"
  },
  {
    "objectID": "aula_p1.html#section-4",
    "href": "aula_p1.html#section-4",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Isso não quer dizer que criar software agora é algo trivial e podemos confiar toda habilidade de programação para a IA.\n\nO fato é que as habilidades para se criar um bom software estão evoluindo.\n\n\nHabilidades como:\n\ndecomposição de problemas\nespecificação de código\nleitura de código\nteste de código\n\n\n\nSe tornaram mais importantes do que eram no passado.\n\n\nJá habilidades como conhecer a semântica e sintaxe de uma biblioteca são agora menos importantes."
  },
  {
    "objectID": "aula_p1.html#section-5",
    "href": "aula_p1.html#section-5",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "O que essa disciplina espera de você:\n\nQue conheça o básico de programação\n\nTendo feito IALG ou FP1.\n\nQue esteja disposto a realmente criar software útil com auxílio de IA.\n\nNão faz sentido fazer uma disciplina para virar um operator de TAB :)\n\nQue tenha resiliência para lidar com todo o ciclo de desenvolvimento.\n\nQue envolve criar, testar, corrigir, melhorar, documentar, etc.\n\n\n\nEsperamos que ao final da disciplina você consiga\n\nCriar programas em Python com auxílio de IA.\nSaiba identificar se os programas funcionam corretamente e, se não funcionam, o que fazer para corrigir.\nConsiga ler e entender códigos em Python.\nSaiba utilizar bibliotecas de análise e visualização de dados em Python.\nSaiba automatizar tarefas repetitivas com Python."
  },
  {
    "objectID": "aula_p1.html#section-6",
    "href": "aula_p1.html#section-6",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Há um desafio ao utilizar assistentes de IA, que é especialmente relevante no caso de uma disciplina.\n\nAssistentes de IA estão evoluindo muito rapidamente,\ne ainda possuem comportamento não-determinístico.\nCom isso, se você resolver a mesma tarefa várias vezes, você pode obter soluções diferentes.\n\n\nO resultado é que o que você fizer pode não bater exatamente com o que o professor preparou para a aula.\n\nPor isso é tão importante que você aprenda como verificar se uma solução do assistente de IA está correta ou não."
  },
  {
    "objectID": "aula_p1.html#section-7",
    "href": "aula_p1.html#section-7",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "O que você acha que esse código faz?\nsection .text \nglobal _start \n_start: \n    mov ecx, 10 \n    mov eax, '0' \n    l1: \n    mov [num], eax \n    mov eax, 4 \n    mov ebx, 1 \n    push ecx \n    mov ecx, num \n    mov edx, 1 \n    int 0x80 \n    mov eax, [num] \n    inc eax \n    pop ecx \n    loop l1 \n    mov eax, 1 \n    int 0x80 \nsection .bss \n    num resb 1\n\nEle faz com que o computador conte de 0 a 9 e imprima os números na tela.\n\nEra assim que se programava antigamente."
  },
  {
    "objectID": "aula_p1.html#section-8",
    "href": "aula_p1.html#section-8",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "O que você acha que esse código faz?\nsection .text \nglobal _start \n_start: \n    mov ecx, 10 \n    mov eax, '0' \n    l1: \n    mov [num], eax \n    mov eax, 4 \n    mov ebx, 1 \n    push ecx \n    mov ecx, num \n    mov edx, 1 \n    int 0x80 \n    mov eax, [num] \n    inc eax \n    pop ecx \n    loop l1 \n    mov eax, 1 \n    int 0x80 \nsection .bss \n    num resb 1\nEssa monstruosidade foi escrita em código Assembly.\n\nProjetada para ser entendida por máquinas e não humanos.\nMesmo na década de 90 jogos como Doom e Quake tinham trechos escritos em Assembly para garantir desempenho."
  },
  {
    "objectID": "aula_p1.html#section-9",
    "href": "aula_p1.html#section-9",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Uma forma mais moderna de escrever o mesmo programa seria:\n\nfor numero in range(9):\n    print(numero)\n\n\nEscrito em Python, que se parece muito mais com uma linguagem natural.\n\nEspecialmente para quem fala inglês.\n\nE é mais fácil para uma pessoa tentar adivinhar o que o código faz, mesmo que não conheça Python.\n\n\nMas infelizmente, o código está errado, ele não exibe os números de 0 a 9.\n\nApesar de parecer inglês, Python não é inglês.\nE, assim, confundir algum detalhe das regras de um programa pode “quebrá-lo”."
  },
  {
    "objectID": "aula_p1.html#section-10",
    "href": "aula_p1.html#section-10",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Com assitentes de IA, o trabalho ficou muito mais fácil.\n\nPodemos escrever em português, e o GitHub Copilot gera o código em Python para nós.\n\n\nSe escrevemos, por exemplo, o comentário abaixo:\n\n# Exiba os números de 0 a 9\n\n\n\nProvavelmente, o GitHub Copilot irá sugerir o código a seguir\n\nque, diferentemente do código anterior, esse está correto.\n\n\n# Exiba os números de 0 a 9\nfor i in range(10):\n    print(i)"
  },
  {
    "objectID": "aula_p1.html#section-11",
    "href": "aula_p1.html#section-11",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Antes dos assistentes de IA, programadores profissionais costumavam trabalhar com duas telas.\n\nUma com a IDE para programar\nOutra com o Google e/ou Stack Overflow para pesquisar como resolver problemas.\n\n\nMuitas vezes a solução encontrada na internet já era o que o programador estava tentando fazer.\n\nespecialmente no caso de programadores iniciantes.\n\n\n\nUma das coisas que os assistentes de IA fazem de melhor é automatizar esse processo.\n\nFazendo isso não só mais rápido, como também contextualizado no código que está sendo escrito."
  },
  {
    "objectID": "aula_p1.html#section-12",
    "href": "aula_p1.html#section-12",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Mas o que é exatamente um assistente de IA?\n\nÉ um agente de IA que te ajuda a completar uma tarefa de programação.\nDe forma similar à Alexa, da Amazon, um assistente de IA entende instruções em linguagem natural.\n\n\nNo caso do Copilot, uma das tarefas que ele faz é:\n\nconverter uma linguagem, como o Português, em programas de computador.\n\n\n\nCopilot é apenas um exemplo de assistente desse tipo.\n\nExistem outros como Amazon Q Developer, Tabnine, Ghostwriter, etc."
  },
  {
    "objectID": "aula_p1.html#section-13",
    "href": "aula_p1.html#section-13",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Mas como o Copilot funciona?\n\nEle pode ser visto como uma camada entre você e o programa que você está implementando.\nEm vez de escrever diretamente em Python, você descreve o que você quer em palavras e o Copilot gera o programa para você.\nEssas palavras que escrevemos é o que chamamos de prompt.\n\n\nO “cérebro” por traz do Copilot é um programa de computador bacana que chamamos de LLM.\n\nLLM vem do inglês Large Language Model, ou Modelo de Linguagem de Larga Escala.\nUm LLM guarda informações sobre o relacionamento entre palavras\n\nIncluindo quais palavras fazem sentido em certos contextos\nE usa isso para prever a melhor sequência de palavras para responder um prompt."
  },
  {
    "objectID": "aula_p1.html#section-14",
    "href": "aula_p1.html#section-14",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Imagine por exemplo que você pergunte qual a próxima palavra deveria ver na frase:\n\n“A pessoa abriu a _____”.\n\n\nHá várias palavras que fariam sentido nesse contexto, como “porta”, “caixa” ou “sessão”.\n\nJá outras claramente não fariam sentido como: “o”, “ele” ou “abrir”.\n\n\n\nUm LLM leva em conta o contexto para completar a próxima palavra e vai fazendo isso, palavra a palavra, até chegar na resposta final.\n\nO LLM faz isso de maneira não determinística, o que significa que há uma certa aleatoriedade no processo.\nAssim, às vezes a frase poderia ser completada com “caixa” e outras vezes com “porta”, por exemplo.\n\n\n\nIsso é importante pois significa que o Copilot pode gerar códigos diferentes cada vez que você pede que ele seja gerado."
  },
  {
    "objectID": "aula_p1.html#section-15",
    "href": "aula_p1.html#section-15",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Repare que em nenhum momento dissemos que o Copilot “entende” o que ele está fazendo.\n\nEle simplesmente completa o código com aquilo que parece fazer mais sentido.\n\n\nAssim, durante nossa jornada na disciplina,\n\ncaberá a você conferir se o que está sendo gerado é realmente o que você precisa que seja feito"
  },
  {
    "objectID": "aula_p1.html#section-16",
    "href": "aula_p1.html#section-16",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Funcionamento do Copilot:\n\nobs.: atualmente você pode escolher diferentes LLMs no Copilot, não só o GPT da OpenAI."
  },
  {
    "objectID": "aula_p1.html#section-17",
    "href": "aula_p1.html#section-17",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Não seria mais prático se o Copilot gerasse código de máquina diretamente?\n\nPor que você acha que o usamos para gerar um código em uma linguagem de programação como Python?\n\n\nA questão é que o Copilot cometerá erros\n\nE nós precisaremos encontrá-los e corrigi-los (mesmo que com a ajuda do próprio Copilot).\nÉ muito mais fácil fazer isso em uma linguagem de alto nível como Python do que em código de máquina."
  },
  {
    "objectID": "aula_p1.html#section-18",
    "href": "aula_p1.html#section-18",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "O vídeo abaixo é bem interessante e explica de forma simples como funcionam os modelos LLM.\n\n\n\n\n\nFica a dica:\n\nEsse canal 3Blue1Brown é muito bom.\nExplica diversos conceitos matemáticos de forma visual e intuitiva."
  },
  {
    "objectID": "aula_p1.html#section-19",
    "href": "aula_p1.html#section-19",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Programadores, especialmente iniciantes, gastam muito tempo aprendendo a escrever código sintaticamente correto.\n\nMesmo programadores mais experientes podem gastar muito tempo quando utilizam uma nova linguagem de programação ou mesmo uma nova biblioteca em uma linguagem que já conhecem.\n\n\nAssistentes como o Copilot podem ajudar muito nesse aspecto.\n\nPois quase sempre geram códigos que são sintaticamente corretos.\nEvitando que precisemos escrevê-los do zero.\n\n\n\nCom isso, conseguimos criar softwares mais complexos em menos tempo e com menos frustrações."
  },
  {
    "objectID": "aula_p1.html#section-20",
    "href": "aula_p1.html#section-20",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Não ter que se preocupar com detalhes de sintaxe pode ser um grande fator de aumento de produtividade.\n\nAfinal de contas o que precisamos é resolver o problema do usuário final, independente dos detalhes de como o código precisa ser escrito.\nMas não é só assim que o Copilot pode nos ajudar."
  },
  {
    "objectID": "aula_p1.html#section-21",
    "href": "aula_p1.html#section-21",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "O Copilot, assim como outros assistentes de IA, também pode:\n\nExplicar códigos que já existem\n\nIsso é útil tanto quando temos que trabalhar em um código que não fomos nós que escrevemos.\nComo também quando queremos entender um código que foi gerado pelo próprio Copilot.\n\n\n\nTornar código mais fácil de entender\n\nHá diferentes formas de escrever um código que resolve a mesma tarefa.\nE algumas são mais fáceis de entender do que outras.\nPodemos então pedir ao Copilot para reorganizar o código de forma que ele fique mais fácil de entender."
  },
  {
    "objectID": "aula_p1.html#section-22",
    "href": "aula_p1.html#section-22",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "O Copilot, assim como outros assistentes de IA, também pode:\nEncontrar e corrigir bugs\n\nComo já foi mencionado o código gerado pelo Copilot pode não funcionar corretamente.\nOu pode funcionar em quase todos os casos, mas falhar em alguns.\nPodemos então pedir ao Copilot para nos ajudar a encontrar e corrigir esses bugs.\n\n\nExplicar erros\n\nAs mensagens de erro geradas pelas linguagens de programação podem ser difíceis de entender.\nO Copilot pode nos ajudar a entender o que está acontecendo e como corrigir o erro.\nÉ útil passar para o Copilot não só a mensagem de erro, como também a pilha de execução."
  },
  {
    "objectID": "aula_p1.html#section-23",
    "href": "aula_p1.html#section-23",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "O Copilot, assim como outros assistentes de IA, também pode:\nEncontrar bibliotecas que podem ser úteis\n\nMuitas vezes não sabemos que bibliotecas existem ou como utilizá-las.\nO Copilot pode nos ajudar a encontrar bibliotecas que podem ser úteis para o nosso problema.\nE também pode nos ajudar a entender como utilizá-las.\n\n\nMelhorar o desempenho do código\n\nO Copilot pode nos ajudar a identificar gargalos de desempenho no código.\nE sugerir melhorias para torná-lo mais eficiente."
  },
  {
    "objectID": "aula_p1.html#section-24",
    "href": "aula_p1.html#section-24",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Uma dica geral para utilizar assistentes de IA é:\n\nInteraja com o assistente de IA, fazendo ciclos de perguntas e feedbacks.\n\n\nVocê pode, por exemplo:\n\nPedir ao Copilot para gerar um código que resolva um problema específico.\nPedir que ele explique o código que fez.\nPedir que ele melhore o código, tornando-o mais fácil de entender.\nPedir que ele encontre e corrija bugs no código.\nSe necessário, pedir para melhorar o desempenho depois de ter a solução funcionando."
  },
  {
    "objectID": "aula_p1.html#section-25",
    "href": "aula_p1.html#section-25",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Além de falar das vantagens, é importante também falar dos riscos e desafios ao usar assistentes de IA.\n\nCopyright\n\nA quem pertence um código gerado por um assistente de IA?\nO assistente de IA é treinado a partir de códigos disponíveis na internet, então é possível que o código gerado seja muito parecido com algum código existente.\nAs ferramentas têm evoluído e muitas identificam a fonte quando o código gerado é muito parecido com algum código existente.\nIsso levanta questões sobre a propriedade intelectual e o uso ético de código gerado por IA.\nA tecnologia evoluiu muito rápido do que a legislação, então ainda teremos muito debate sobre o assunto."
  },
  {
    "objectID": "aula_p1.html#section-26",
    "href": "aula_p1.html#section-26",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Educação\n\nOs autores do livro fizeram testes com exercícios de disciplinas introdutórias de programação.\nDe cara, o Copilot acertou 50% dos exercícios.\n\nCom um pouco mais de contexto acertou 80%.\n\nÉ fato que a educação precisa mudar para lidar com essa nova realidade.\n\nEm algumas escolas, o aluno pode usar assitentes de IA para fazer os exercícios.\nEm outras, o uso é proibido em provas ou dependendo do curso (como Computação ou Sistemas).\nAlgumas treinararam LLMs específicos para dar apenas certos tipos de respostas.\n\nO fato é que ainda está muito cedo para dizer como LLM vai afetar a educação em computação.\n\nMas certas tendências já começaram a aparecer."
  },
  {
    "objectID": "aula_p1.html#section-27",
    "href": "aula_p1.html#section-27",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Qualidade do código\n\nÉ necessário ser bem cuidadoso e não confiar cegamente no código gerado por assistentes de IA.\n\nEspecialmente em códigos sensíveis ou que precisam ser especialmente seguros.\nImagine um código de um dispositivo médico ou de um carro autônomo, por exemplo.\n\nÉ fundamental criar uma estrutura de testes, independente do assistente de IA,\n\nPara garantir que o código funciona corretamente."
  },
  {
    "objectID": "aula_p1.html#section-28",
    "href": "aula_p1.html#section-28",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Segurança do código\n\nNão há nenhuma garantia de segurança em código gerado por assistentes de IA.\nTrabalhar com dados de usuários, por exemplo, requer cuidados especiais.\nDevemos também tomar cuidado com dados que são enviados para os assistentes de IA.\n\nPor exemplo, não enviar dados sensíveis ou confidenciais.\n\nMuitas empresas proíbam ou limitam a forma de uso das ferramentas de IA, devido a essas preocupações."
  },
  {
    "objectID": "aula_p1.html#section-29",
    "href": "aula_p1.html#section-29",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Assistentes de IA não são especialistas (experts)\n\nA grande diferença de um especialista não é o que ele sabe, mas o que ele sabe que não sabe :)\nUm especialista consegue dizer o quão confiante ele está sobre uma determinada solução.\n\nE se não estiver confiante o suficiente, ele estuda até conhecer melhor o que ele não sabe.\n\nAssistentes de IA não têm essa capacidade.\n\nHá casos de assistentes que geraram obituários de pessoas mortas ou que explicaram com um ábaco é mais rápido que um computador.\n\nAs ferramentas estão evoluindo muito, mas ainda são muito autoconfiantes.\nEm resumo: tudo que um assistente de IA faz deve ser verificado por um humano."
  },
  {
    "objectID": "aula_p1.html#section-30",
    "href": "aula_p1.html#section-30",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Viés\n\nLLMs vão reproduzir os mesmos vieses que estão presentes nos dados com os quais foram treinados.\nUm LLM é treinada com mais literatura inglesa do que de outras culturas, por exemplo.\n\nE isso acabará se refletindo nas respostas que ele gera.\n\nHá também o risco de reforçar estereótipos negativos.\nNa geração de código, é provável que ele gere códigos em um estilo que é mais comum em grupos que têm maior representatividade na comunidade de programação.\nPor outro lado, as próprias LLMs podem ajudar a quebrar esses vieses ao facilitar o acesso à programação para pessoas que não têm tanta representatividade na comunidade."
  },
  {
    "objectID": "aula_p1.html#section-31",
    "href": "aula_p1.html#section-31",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Se o Copilot pode gerar código para nós, explicá-lo e corrigi-lo, não temos que fazer nada, certo?\n\nErrado!\nAssistentes de IA cometem erros.\n\n\nAlém disso, não podemos passar uma tarefa gigantesca para o Copilot e esperar que ele resolva tudo.\n\nExemplo: “Crie um novo jogo de videogame. Ah, e ele precisa ser divertido!”\nIsso não vai funcionar.\nPrecisamos quebrar um problema grande em parte menores para os quais o Copilot possa nos ajudar.\n\nE fazer essa decomposição de problemas não é algo tão simples quanto possa parecer à primeira vista."
  },
  {
    "objectID": "aula_p1.html#section-32",
    "href": "aula_p1.html#section-32",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Uma tarefa que já existia e agora é ainda mais fundamental é: testes de software.\n\nDesenvolvedores profissionais e empresas já tratam esse tipo de tarefa.\nMas é importante saber que o tipo de erro que um assistente de IA pode cometer é diferente do tipo de erro que um humano pode cometer.\n\nPode acontecer de em 20 linhas de código, uma delas tenha um erro tão absurdo ou sutil, que não esperaríamos que ele pudesse acontecer.\n\nAssim, é importante criar uma boa estrutura de testes para garantir que o código funciona corretamente."
  },
  {
    "objectID": "aula_p1.html#section-33",
    "href": "aula_p1.html#section-33",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Outra habilidade essencial é depuração de código.\n\nDepuração é o processo de encontrar e corrigir erros em um código.\nQuando nós mesmos escrevemos o código já costuma ser uma tarefa que consome tempo e exige paciência.\nCom assistentes de IA, a depuração pode ser ainda mais desafiadora.\n\nMesmo que possamos usar a própria IA para ajudar a corrigir\nainda assim precisamos entender o que está acontecendo para poder explicar para a IA o que está errado."
  },
  {
    "objectID": "aula_p1.html#section-34",
    "href": "aula_p1.html#section-34",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Por fim, há uma habilidade totalmente nova quando usamos assistentes de IA: engenharia de prompt.\n\nEngenharia de prompt envolve como dizer para o Copilot o que ele tem que fazer.\nNós podemos escrever as instruções em português, mas a forma como escrevemos essas instruções pode fazer muita diferença.\n\nPrecisamos ser bastante precisos sobre o que queremos.\n\nE mesmo sendo precisos pode ser que a resposta gerada não seja correta.\n\nNesse caso, precisamos primeiro ser capazes de identificar o que está errado\ne depois sermos capazes de reformular o prompt para tentar obter uma resposta melhor.\n\nÀs vezes um pequeno detalhe no prompt pode fazer muita diferença."
  },
  {
    "objectID": "aula_p1.html#section-35",
    "href": "aula_p1.html#section-35",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Para fazer atividades da disciplina você precisa instalar\n\nVS Code\nPython\nExtensão de Python para VS Code (da Microsoft)\n\nVocê pode instalar digitando Ctrl+P no VS Code e digitando ext install ms-python.python."
  },
  {
    "objectID": "aula_p1.html#section-37",
    "href": "aula_p1.html#section-37",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Além disso, precisamos, claro, do GitHub Copilot.\n\nE, como estudante da UFLA, você tem direito à versão GitHub Copilot Pro.\n\n\nPara ter acesso a ela você deve:\n\nCriar uma conta no GitHub, se ainda não tiver, acessando github.com/.\nApós logar, clique no ícone do seu usuário no canto superior direito e acesse a opção Settings.\nNa barra lateral esquerda, clique em Billing and licensing → Education benefits.\nAcesse a opção Start an application\n\nSiga as instruções (você precisará fornecer um comprovante de matrícula)."
  },
  {
    "objectID": "aula_p1.html#section-38",
    "href": "aula_p1.html#section-38",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Vamos agora testar o uso do GitHub Copilot no VS Code\n\nVocê deve logar com seu usuário no painel do Copilot.\n\n\nEm seguida, apague o conteúdo do arquivo Python e digite um comentário com a instrução abaixo.\n\n# exiba na tela: bora começar!\n\n\n\nAo apertar ENTER, aguarde um pouco e o Copilot deve sugerir um código que atenda à sua solicitação.\n\nO código aparece esmaecido e em itálico.\nE você deve apertar TAB para aceitar a sugestão."
  },
  {
    "objectID": "aula_p1.html#section-39",
    "href": "aula_p1.html#section-39",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Você deverá então ver um código semelhante a este:\n\nExecute então seu programa para testá-lo.\n\n\n# exiba na tela: bora começar!\nprint(\"bora começar!\")\n\n\nApareceu algo diferente para você?\n\nLembre que o Copilot é não determinístico e pode gerar soluções diferentes de cada vez.\nVocê pode tentar reformular o prompt para ver se obtém uma resposta diferente."
  },
  {
    "objectID": "aula_p1.html#section-40",
    "href": "aula_p1.html#section-40",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Vamos experimentar um programa que mais do que um simples print na tela.\n\nExperimente criar um programa a partir do prompt abaixo.\n\nNão esqueça de testá-lo.\n\n\n# peça ao usuário o tamanho dos lados de um retângulo e \n# exiba a área do retângulo\n\nDica: às vezes o Copilot continua o comentário da linha anterior em vez de gerar código.\n\nSe isso acontecer, você pode tentar apertar ENTER novamente.\nOu então começar a digitar um código para que ele entenda que é para completar."
  },
  {
    "objectID": "aula_p1.html#section-41",
    "href": "aula_p1.html#section-41",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Nós podemos também conversar com o Copilot dentro do contexto de uma parte de código.\n\nPara alterar um trecho de código, por exemplo.\n\n\nExperimente selecionar o código que você acabou de gerar e aperte Ctrl+I.\n\nNa caixa de diálogo que aparece peça ao Copilot para usar emojis na interação com o usuário, por exemplo.\nDepois de processar o prompt, o Copilot fará uma sugestão de alteração no código\n\nVocê pode aceitar a sugestão (o código será alterado).\nFechar a caixa de diálogo (o que vai ignorar a sugestão).\nOu você pode pedir outra sugestão (clicando no botão da terceira opção).\n\n\n\n\nQue tal agora pedir para o Copilot conversar com o usuário em mineirês? :)"
  },
  {
    "objectID": "aula_p1.html#section-42",
    "href": "aula_p1.html#section-42",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Vamos agora fazer algo mais interessante.\n\nE que já dê uma ideia de como podemos usar o Copilot em tarefas de processamento de dados.\n\n\nNós vamos utilizar um conjunto de dados (dataset) da plataforma Kaggle.\n\nUma plataforma de competição de ciência de dados e aprendizado de máquina.\nQue tem milhares de conjuntos de dados dos mais variados assuntos."
  },
  {
    "objectID": "aula_p1.html#section-43",
    "href": "aula_p1.html#section-43",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Vamos trabalhar com dados sobre futebol.\n\nAcesse a página do dataset All footeball player stats in top 5 leagues 23/24.\nSão dados estatísticos dos jogadores das 5 principais ligas de futebol europeias.\nNa página há informações sobre os dados disponíveis e uma amostra dos dados.\n\n\nVamos baixar os dados para usar em nosso programa. Para isso:\n\nClique em Download → Download dataset as zip.\n\nLogue no Kaggle ou crie uma conta se não tiver (pode ser logando com a conta do Google).\n\nDescompacte o arquivo zip baixado.\nCopie o arquivo top5-players.csv para a pasta do seu projeto Python."
  },
  {
    "objectID": "aula_p1.html#section-44",
    "href": "aula_p1.html#section-44",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Vamos agora escrever um prompt para carregar os dados do arquivo em nosso programa.\n\nCrie um novo arquivo python ou apague o conteúdo do arquivo que você tinha criado.\nEm seguida digite o prompt abaixo e gere o código com o Copilot.\n\n\n\n# abra o arquivo csv chamado \"top5-players.csv\" \n# e guarde os dados em uma variável\n\n\n\nExecute o programa:\n\nele não deve exibir nada, mas serve para testar se o código gerado funciona.\n\n\n\nÉ possível que o Copilot tenha sugerido uma biblioteca mas não a tenha importado.\n\nPara corrigir isso, ou algum outro tipo de erro, você pode selecionar, clicar na lâmpada que aparece\n\nE acessar a opção fix (consertar).\n\nSe ele sugeriu usar uma biblioteca que precisaria ser instalada você pode alterar o prompt\n\npedindo para usar apenas as bibliotecas padrões do python."
  },
  {
    "objectID": "aula_p1.html#section-45",
    "href": "aula_p1.html#section-45",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Nessa parte cada aluno pode estar vendo um código diferente:\n\npois há várias bibliotecas no Python para lidar com arquivos CSV.\nE, como já sabemos, os assistentes de IA são não determinísticos."
  },
  {
    "objectID": "aula_p1.html#section-46",
    "href": "aula_p1.html#section-46",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Vamos agora trabalhar com os dados que foram carregados.\n\nA ideia é analisar as estatísticas dos jogadores brasileiros nas principais ligas de futebol.\n\n\nCom o prompt abaixo vamos processar os dados para calcular a quantidade de gol feitos por brasileiros em cada liga.\n\n# a terceira coluna traz o nome do país do jogador, a sexta o nome da liga\n# e a nona o número de gols feitos pelo jogador. Para cada liga some\n# o número de gols feitos por jogadores brasileiros (o país é identificado\n# como \"br BRA\")\n\n\n\nEm seguida, vamos exibir as informações calculadas ordenadas pelo número de gols feitos.\n\n# exiba o nome da liga e o número de gols feitos por brasileiros em ordem\n# descrescente de gols feitos\n\n\n\nTeste seu programa!\n\nCaso seja gerado algum erro, use o Copilot para ajudá-lo a corrigir."
  },
  {
    "objectID": "aula_p1.html#section-47",
    "href": "aula_p1.html#section-47",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Repare que fizemos o nosso programa com apenas três prompts.\n\nUma para lidar com a entrada de dados.\nOutro para processá-los.\nE o último para exibir os dados.\n\n\nEsse ciclo de entrada, processamento e saída é extremamente comum em programação."
  },
  {
    "objectID": "aula_p1.html#section-48",
    "href": "aula_p1.html#section-48",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Vamos agora usar o Copilot para alterar o código que havíamos gerado.\n\nSuponha que estamos interessados apenas nos gols dos jogadores jovens.\n\nApague o código gerado pelo segundo prompt que você tinha feito altere o prompt\n\nInformando a coluna que contém a idade e pedindo os dados apenas jogadores com menos de 23 anos.\n\n\n\n# a terceira coluna traz o nome do país do jogador, a sexta o nome da liga\n# e a nona o número de gols feitos pelo jogador. Para cada liga some\n# o número de gols feitos por jogadores brasileiros (o país é identificado\n# como \"br BRA\") e que tenham menos de 23 anos\n\nTeste seu programa!"
  },
  {
    "objectID": "aula_p1.html#section-49",
    "href": "aula_p1.html#section-49",
    "title": "Introdução à Programação Suportada por IA",
    "section": "",
    "text": "Você deve ter notado que os nomes das ligas começam com um identificador do país.\n\neng, es, it, fr ou de.\n\n\nVamos pedir ao Copilot para substituir esse identificador pelo nome do país.\n\nPara isso, apague o código gerado pelo terceiro prompt e o reescreva.\n\n\n\n\n# exiba o nome da liga e o número de gols feitos por brasileiros em ordem\n# descrescente de gols feitos.\n# O nome da liga tem primeiro duas ou três letras para identificar o país,\n# seguido de um espaço e depois o nome da liga propriamente dito. Substitua\n# essas duas letras pelo nome do país. Os países são:\n# eng: Inglaterra, es: Espanha, it: Itália, fr: França e de: Alemanha\n\n\n\nDica:\n\nSe o copilot não gerar o código selecione o comentário, clique na lâmpada, acesse Modify e digite complete o código."
  },
  {
    "objectID": "aula_p2.html#section",
    "href": "aula_p2.html#section",
    "title": "Lendo Código Python",
    "section": "",
    "text": "O conteúdo dessa aula é baseado nos capítulos 2 e 3 do livro abaixo."
  },
  {
    "objectID": "aula_p2.html#section-2",
    "href": "aula_p2.html#section-2",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Vamos agora fazer algo mais interessante.\n\nE que já dê uma ideia de como podemos usar o Copilot em tarefas de processamento de dados.\n\n\nNós vamos utilizar um conjunto de dados (dataset) da plataforma Kaggle.\n\nUma plataforma de competição de ciência de dados e aprendizado de máquina.\nQue tem milhares de conjuntos de dados dos mais variados assuntos."
  },
  {
    "objectID": "aula_p2.html#section-3",
    "href": "aula_p2.html#section-3",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Vamos trabalhar com dados sobre futebol.\n\nAcesse a página do dataset All footeball player stats in top 5 leagues 23/24.\nSão dados estatísticos dos jogadores das 5 principais ligas de futebol europeias.\nVeja na página quais são os dados disponíveis e uma amostra dos dados."
  },
  {
    "objectID": "aula_p2.html#section-4",
    "href": "aula_p2.html#section-4",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Vamos baixar os dados para usar em nosso programa. Para isso:\n\nClique em Download → Download dataset as zip.\n\nLogue no Kaggle ou crie uma conta se não tiver (pode ser logando com a conta do Google).\n\nDescompacte o arquivo zip baixado.\nCrie uma pasta para o projeto da aula de hoje e copie para ela o arquivo top5-players.csv."
  },
  {
    "objectID": "aula_p2.html#section-5",
    "href": "aula_p2.html#section-5",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Vamos agora escrever um prompt para carregar os dados do arquivo em nosso programa.\n\nAbra a pasta criada no VS Code.\nCrie um novo arquivo python chamado futebol.py.\nEm seguida digite o prompt abaixo e gere o código com o Copilot.\n\n\n\n# abra o arquivo csv chamado \"top5-players.csv\" \n# e guarde os dados em uma variável\n\n\n\nExecute o programa:\n\nele não deve exibir nada, mas serve para testar se o código gerado funciona."
  },
  {
    "objectID": "aula_p2.html#section-6",
    "href": "aula_p2.html#section-6",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Nessa parte cada aluno pode estar vendo um código diferente:\n\npois há várias bibliotecas no Python para lidar com arquivos CSV.\nE, como já sabemos, os assistentes de IA são não determinísticos."
  },
  {
    "objectID": "aula_p2.html#section-7",
    "href": "aula_p2.html#section-7",
    "title": "Lendo Código Python",
    "section": "",
    "text": "É possível que o Copilot tenha sugerido uma biblioteca mas não a tenha importado.\n\nPara corrigir isso, ou algum outro tipo de erro, você pode selecionar o código gerado,\n\nclicar na lâmpada que aparece e acessar a opção fix (consertar).\n\nSe ele sugeriu usar uma biblioteca que precisaria ser instalada você pode alterar o prompt\n\npedindo para usar apenas as bibliotecas padrões do python."
  },
  {
    "objectID": "aula_p2.html#section-8",
    "href": "aula_p2.html#section-8",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Vamos agora trabalhar com os dados que foram carregados.\n\nA ideia é analisar as estatísticas dos jogadores brasileiros nas principais ligas de futebol.\n\n\nPara isso vamos usar dois prompts:\n\nUm para calcular os dados que queremos: quantidade de gols feitos por brasileiros em cada liga.\nE outro para exibir os resultados."
  },
  {
    "objectID": "aula_p2.html#section-9",
    "href": "aula_p2.html#section-9",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Gere então o código do primeiro prompt:\n\n# a terceira coluna traz o nome do país do jogador, \n# a sexta o nome da liga e a nona o número de gols \n# feitos pelo jogador. Para cada liga some o número \n# de gols feitos por jogadores brasileiros (o país \n# é identificado como \"br BRA\")\n\n\nE, em seguida, do segundo.\n\n# exiba o nome da liga e o número de gols feitos por \n# brasileiros em ordem descrescente de gols feitos\n\nTeste seu programa (use o Copilot para corrigir erros, se necessário)."
  },
  {
    "objectID": "aula_p2.html#section-10",
    "href": "aula_p2.html#section-10",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Repare que fizemos o nosso programa com apenas três prompts.\n\nUma para lidar com a entrada de dados.\nOutro para processá-los.\nE o último para exibir os dados.\n\n\nEsse ciclo de entrada, processamento e saída é extremamente comum em programação."
  },
  {
    "objectID": "aula_p2.html#section-11",
    "href": "aula_p2.html#section-11",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Vamos agora usar o Copilot para alterar o código que havíamos gerado.\n\nSuponha que estamos interessados apenas nos gols dos jogadores jovens."
  },
  {
    "objectID": "aula_p2.html#section-12",
    "href": "aula_p2.html#section-12",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Apague o código gerado pelo segundo prompt que você tinha feito\n\nE altere o prompt informando a coluna que contém a idade e\npedindo os dados apenas jogadores com menos de 23 anos.\n\n\n\n# a terceira coluna traz o nome do país do jogador, \n# a sexta o nome da liga, a sétima a idade do jogador\n# e a nona o número de gols feitos pelo jogador. \n# Para cada liga some o número de gols feitos por \n# jogadores brasileiros (o país é identificado como \n# \"br BRA\") e que tenham menos de 23 anos.\n\nTeste seu programa!"
  },
  {
    "objectID": "aula_p2.html#section-13",
    "href": "aula_p2.html#section-13",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Você deve ter notado que os nomes das ligas começam com um identificador do país.\n\neng, es, it, fr ou de.\n\n\nVamos pedir ao Copilot para substituir esse identificador pelo nome do país."
  },
  {
    "objectID": "aula_p2.html#section-14",
    "href": "aula_p2.html#section-14",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Apague o código gerado pelo terceiro prompt e acrescente as informações da terceira linha abaixo em diante.\n\n# exiba o nome da liga e o número de gols feitos por \n# brasileiros em ordem descrescente de gols feitos.\n# O nome da liga tem primeiro duas ou três letras para \n# identificar o país, seguido de um espaço e depois o \n# nome da liga propriamente dito. Substitua essas duas \n# letras pelo nome do país. Os países são: \n# eng: Inglaterra, es: Espanha, it: Itália, fr: França \n# e de: Alemanha\n\nDica: se o copilot não gerar o código selecione o comentário, clique na lâmpada, acesse Modify e digite complete o código."
  },
  {
    "objectID": "aula_p2.html#section-15",
    "href": "aula_p2.html#section-15",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Repare que o que fizemos poderia ser sido feito por alguém que nunca tivesse programado em Python.\n\nEssa pessoa poderia ter mais dificuldade nas situações que geram erro.\nMas ainda assim conseguiria, ao final, obter o resultado que precisa.\nImagine como seria difícil para ela fazer isso sem uma ferramenta como o Copilot?"
  },
  {
    "objectID": "aula_p2.html#section-16",
    "href": "aula_p2.html#section-16",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Vamos agora interagir com o Copilot via chat para gerar um gráfico a partir dos dados processados.\n\nPara isso, selecione o texto e o código do terceiro prompt.\n\nAbra o chat do Copilot (clicando no ícone de chat na barra de título do VS Code ou digitando Ctrl+Alt+I).\nMude do modo Agent para Chat (primeira opção na parte inferior do chat).\nE digite o prompt a seguir."
  },
  {
    "objectID": "aula_p2.html#section-17",
    "href": "aula_p2.html#section-17",
    "title": "Lendo Código Python",
    "section": "",
    "text": "# O código selecionado exibe informações no terminal. \n# Acrescente código para que essas informações sejam \n# exibidas em um gráfico. Caso seja necessário \n# instalar alguma biblioteca, me explique como eu \n# poderia fazer isso.\n\nSiga então as instruções e faça interações com o Copilot, se necessário, até obter o gráfico."
  },
  {
    "objectID": "aula_p2.html#section-18",
    "href": "aula_p2.html#section-18",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Os exercícios a seguir podem ser feitos usando o Copilot\n\nselecionando o código e acessando a opção Modify\nou via chat.\n\n\nAumente o tamanho das fontes do gráfico.\nExiba o número de gols nas barras do gráfico.\nSalve o gráfico em um arquivo PNG."
  },
  {
    "objectID": "aula_p2.html#section-19",
    "href": "aula_p2.html#section-19",
    "title": "Lendo Código Python",
    "section": "",
    "text": "É importante termos em mente que não estamos validando os resultados gerados\n\nAssim, é possível que alguns resultados estejam incorretos.\n\n\nComo foi mencionado nas aulas anteriores, precisamos aprender a testar o código gerado pelo Copilot\n\nPara termos segurança de que ele faz o que precisamos.\nVeremos mais sobre isso mais adiante na disciplina."
  },
  {
    "objectID": "aula_p2.html#section-20",
    "href": "aula_p2.html#section-20",
    "title": "Lendo Código Python",
    "section": "",
    "text": "Obtendo mais informações do dataset:\n\nAs informações abaixo podem ser exibidas apenas no terminal.\n\n\nExiba os nomes e quantidade de gols dos cinco jogadores que mais fizeram gols em cada liga, ordenados pela quantidade de gols.\nEncontre o jogador mais jovem que marcou gol em cada liga e exiba seu nome, idade, equipe e número de gols.\nEncontre a equipe que menos tomou cartões (amarelos e vermelhos em cada liga). Exiba o nome da equipe e a quantidade de cartões recebidos de cada tipo."
  }
]